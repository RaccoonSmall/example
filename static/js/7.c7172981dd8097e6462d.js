webpackJsonp([7],{"4rVW":function(t,e){},rShL:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var s={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("main",[n("p",{staticClass:"title-tip margin-t-0"},[t._v("项目实例化使用Vuex")]),t._v(" "),n("div",{staticClass:"x-font-container"},[n("div",{staticClass:"indexs"},[t._v("官方解释：首先知道,Vuex应用的核心功能是Store,Store是什么？")]),t._v(" "),n("div",{staticClass:"indexs"},[t._v("有时候思考代码，要有一点抽象的思维，在不知道一开始设计师是如何去构建Vuex时。我们可以理解成Store 是一个仓库，它包含着应用中我们大部分需要状态管理--即state. state 可以理解成是vuex的数据驱动器，需要知道的是：")]),t._v(" "),n("div",{staticClass:"indexs"},[n("span",{staticClass:"color-red"},[t._v("1、")]),t._v("当组件从state 中读取状态的时候，如果state发生变化，则组件响应的状态也会发生改变。因此Vuex 也是响应式的。")]),t._v(" "),n("div",{staticClass:"indexs"},[n("span",{staticClass:"color-red"},[t._v("2、")]),t._v("改变state 中的状态，需要通过commit() 方法触发改变state 的状态。")])]),t._v(" "),n("h4",[t._v("使用Vuex")]),t._v(" "),n("div",[n("div",[t._v("前面说到，使用Vuex 必须显示的安装Vuex:")]),t._v(" "),n("pre",[t._v("            import vue from 'vue'\n            import vuex from 'vuex'\n            //安装vuex\n            vue.use(vuex);   \n        ")])]),t._v(" "),n("div",[n("div",[t._v("定义Vuex Store仓库")]),t._v(" "),n("pre",[t._v("            "),n("code",[t._v("\n                const store = new vuex.Store({\n                    state:{\n                        count:0,\n                    },\n                    mutations:{\n                        addCount(state) {\n                            state.count ++;\n                        }\n                    }\n                });\n            ")]),t._v("\n            获取count 值，通过：\n            store.state.count\n\n            改变count 状态值，通过commit显式提交：\n            store.commmit('addCount');\n        ")])])])}]};var a=n("VU/8")(null,s,!1,function(t){n("4rVW")},"data-v-589afecf",null);e.default=a.exports}});
//# sourceMappingURL=7.c7172981dd8097e6462d.js.map