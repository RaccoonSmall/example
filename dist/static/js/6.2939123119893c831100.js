webpackJsonp([6],{"8hOw":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n("mhJK"),s=n.n(r);for(var a in r)"default"!==a&&function(e){n.d(t,e,function(){return r[e]})}(a);var o=n("i+yc"),i=n("VU/8")(s.a,o.a,!1,null,null,null);t.default=i.exports},"i+yc":function(e,t,n){"use strict";var r={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("main",[n("div",[n("p",{staticClass:"title-tip magin-t-0"},[e._v("多组件中使用Vuex State")]),e._v(" "),n("pre",[e._v("            "),n("div",[e._v("  状态管理是面向整个程序应用，如果多个组件应用到一个状态（State）时,当然最好的做法是多个组价依赖于一个状态，当这个状态值发生改变时，多个组件的状态同时也发生改变。")]),e._v("\n            "),n("div",[e._v("  只需要在Vue 实例化注册Store ，从而就可以做到从父组件注入到每一个子组件之中.")]),e._v("\n            "),n("code",[e._v("\n                import router from './router'\n                import store from './store'\n\n                new Vue({\n                    el: '#app',\n                    router,\n                    //同时注入store\n                    store,\n                    ...\n                })\n            ")]),e._v("\n        ")]),e._v(" "),n("strong",[e._v("  通过vue 实例化注册Store,全局我们就能够通过 this.$store 获取Vuex Store State")]),e._v(" "),n("pre",[e._v("            "),n("code",[e._v("\n                export default {\n                    created() {\n                        let mesage = this.$store.state.message;\n                        let address = this.$store.state.address;\n                    }\n                }\n            ")]),e._v("\n        ")])])])}]};t.a=r},mhJK:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={data:function(){return{}},created:function(){var e=this.$store.state.message,t=this.$store.state.address;console.log("Vuex Store State Data------"+e+"\t"+t)}}}});
//# sourceMappingURL=6.2939123119893c831100.js.map