webpackJsonp([0],{"5Qh4":function(t,e){},cThQ:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={data:function(){return{}},created:function(){var t=this.$store.state.module_user.user_name;console.log(t)},methods:{user:function(){var t=this.$store.state.module_user.user_name;alert(t)},getters:function(){var t=this.$store.getters.getUserName;alert(t)}}}},nika:function(t,e,n){"use strict";var s={render:function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("main",[n("div",[n("p",{staticClass:"title-tip margin-t-0"},[t._v("使用进阶--module")]),t._v(" "),n("div",{staticClass:"x-font-container"},[t._v("Module => 从词义上理解就是模块块，在前端开发，模块化的概念已经在熟悉不过。初始化Vuex ，定义一个Store对象，使用单一的状态树，当应用对象涉及到大量的状态管理，应用变得越来越复杂的时候，store 对象会变得越来越臃肿，不易阅读以及维护。")]),t._v(" "),n("div",{staticClass:"x-font-container"},[t._v("实际模块化开发的理念在09 年已经提出，比如require.js,ecmascript-5。相比之前多页面的开发，到目前模块化、组件化、插件化的开发得到了质量上的提升。又随着H5 技术的成熟，前端开发早已经不是后端开发人员完全可以能够把拿的Code。其难度性也越之变大，同时随着技术的成熟，代码变得也更加合理、清晰、规范和易用。\n            "),n("strong",[t._v("如下示例将介绍Store 对象分割成模块的使用:")]),t._v(" "),t._m(0),t._v(" "),n("p",{staticClass:"x-btn",on:{click:t.user}},[t._v("获取Store Module State : this.$store.state.module_user.user_name")])])]),t._v(" "),n("div",[n("p",{staticClass:"title-tip"},[t._v("Module 全局命名空间")]),t._v(" "),n("div",{staticClass:"x-font-container"},[t._v("需要注意的是，一旦Store 中注册了Modules,其Action、Mutation、Getter 同样是全局的命名空间，这样使得多个模块能够对同一Mutation、Action 响应：\n            "),n("hr"),t._v(" "),n("div",[t._v("this.$store.getters.getUserName;")]),t._v(" "),n("div",[t._v("this.$store.commit('commit_fun');")]),t._v(" "),n("div",[t._v("this.$store.dispatch('dispatch_fun');")]),t._v(" "),n("p",{staticClass:"x-btn",on:{click:t.getters}},[t._v("this.$store.getters.getUserName")])])]),t._v(" "),t._m(1)])},staticRenderFns:[function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("pre",[t._v("                "),n("code",[t._v("\n                    "),n("span",{staticClass:"x-color"},[t._v("//用户--Store")]),t._v("\n                    const module_user = {\n                        state:{\n                            user_name:'张三',\n                        },\n                        getters:{\n                            getUserName(state,getter) {\n                                return state.user_name;\n                            }\n                        },\n                        mutations:{\n                        },\n                        actions:{\n                        },\n                    };\n                    "),n("span",{staticClass:"x-color"},[t._v("//管理员--admin")]),t._v("\n                    const module_admin = {\n                        state:{\n                            manage_name:'李四',\n                        },\n                        getters:{\n                            getManageName(state,getter) {\n                                return state.manage_name;\n                            }\n                        },\n                        mutations:{\n                        },\n                        actions:{\n                        },\n                    };\n\n                    const store = new vuex.Store({\n                        "),n("span",{staticClass:"x-color"},[t._v("//Store 引入")]),t._v("\n                        modules:{\n                            module_user,\n                            module_admin\n                        },\n                    });\n\n                \n                    "),n("strong",[t._v(" 获取Module Store 对象：")]),t._v("\n                    "),n("span",{staticClass:"x-color"},[t._v("-> module_user 对象")]),t._v("\n                    this.$rotuer.store.state.module_user\n\n                    "),n("span",{staticClass:"x-color"},[t._v("-> module_admin 对象")]),t._v("\n                    this.$rotuer.store.state.module_admin\n                ")]),t._v("\n            ")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[n("p",{staticClass:"title-tip"},[t._v("模块的动态注册")]),t._v(" "),n("div",[t._v("  在Store 注册之后，我们可以动态的往Store 添加其他状态管理的模块。-- store.registerModule 方法注册模块，实例:")]),t._v(" "),n("pre",[t._v("            "),n("code",[t._v("\n                //管理员--admin\n                const module_admin = {\n                    state:{\n                        manage_name:'李四',\n                    },\n                    getters:{\n                        getManageName(state,getter) {\n                            return state.manage_name;\n                        }\n                    },\n                    mutations:{\n                    },\n                    actions:{\n                    },\n                };\n                "),n("span",{staticClass:"x-color"},[t._v("// 外部注册Module")]),t._v("\n                store.registerModule('module_admin',module_admin);\n\n                "),n("span",{staticClass:"x-color"},[t._v("// 卸载module")]),t._v("\n                store.unregisterModule('module_admin');\n            ")]),t._v("\n        ")])])}]};e.a=s},"q+Ne":function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var s=n("cThQ"),a=n.n(s);for(var r in s)"default"!==r&&function(t){n.d(e,t,function(){return s[t]})}(r);var o=n("nika");var i=function(t){n("5Qh4")},u=n("VU/8")(a.a,o.a,!1,i,"data-v-734e87db",null);e.default=u.exports}});
//# sourceMappingURL=0.5ff27783a57ffdcaf68c.js.map