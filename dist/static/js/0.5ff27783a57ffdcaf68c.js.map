{"version":3,"sources":["webpack:///src/page/view-8/index.vue","webpack:///./src/page/view-8/index.vue?67da","webpack:///./src/page/view-8/index.vue"],"names":["data","created","user","this","$store","state","module_user","user_name","console","log","methods","alert","getters","name","getUserName","esExports","render","_vm","_h","$createElement","_c","_self","staticClass","_v","_m","on","click","staticRenderFns","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_734e87db_hasScoped_true_transformToRequire_video_src_poster_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_index_vue__","__webpack_require__","__vue_styles__","ssrContext","Component","normalizeComponent","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_index_vue___default","a"],"mappings":"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","file":"static/js/0.5ff27783a57ffdcaf68c.js","sourcesContent":["<template>\r\n    <main>\r\n        <div>\r\n            <p class=\"title-tip margin-t-0\">使用进阶--module</p>\r\n            <div class=\"x-font-container\">Module => 从词义上理解就是模块块，在前端开发，模块化的概念已经在熟悉不过。初始化Vuex ，定义一个Store对象，使用单一的状态树，当应用对象涉及到大量的状态管理，应用变得越来越复杂的时候，store 对象会变得越来越臃肿，不易阅读以及维护。</div>\r\n            <div class=\"x-font-container\">实际模块化开发的理念在09 年已经提出，比如require.js,ecmascript-5。相比之前多页面的开发，到目前模块化、组件化、插件化的开发得到了质量上的提升。又随着H5 技术的成熟，前端开发早已经不是后端开发人员完全可以能够把拿的Code。其难度性也越之变大，同时随着技术的成熟，代码变得也更加合理、清晰、规范和易用。\r\n                <strong>如下示例将介绍Store 对象分割成模块的使用:</strong>\r\n                <pre>\r\n                    <code>\r\n                        <span class=\"x-color\">//用户--Store</span>\r\n                        const module_user = {\r\n                            state:{\r\n                                user_name:'张三',\r\n                            },\r\n                            getters:{\r\n                                getUserName(state,getter) {\r\n                                    return state.user_name;\r\n                                }\r\n                            },\r\n                            mutations:{\r\n                            },\r\n                            actions:{\r\n                            },\r\n                        };\r\n                        <span class=\"x-color\">//管理员--admin</span>\r\n                        const module_admin = {\r\n                            state:{\r\n                                manage_name:'李四',\r\n                            },\r\n                            getters:{\r\n                                getManageName(state,getter) {\r\n                                    return state.manage_name;\r\n                                }\r\n                            },\r\n                            mutations:{\r\n                            },\r\n                            actions:{\r\n                            },\r\n                        };\r\n\r\n                        const store = new vuex.Store({\r\n                            <span class=\"x-color\">//Store 引入</span>\r\n                            modules:{\r\n                                module_user,\r\n                                module_admin\r\n                            },\r\n                        });\r\n\r\n                    \r\n                        <strong> 获取Module Store 对象：</strong>\r\n                        <span class=\"x-color\">-> module_user 对象</span>\r\n                        this.$rotuer.store.state.module_user\r\n\r\n                        <span class=\"x-color\">-> module_admin 对象</span>\r\n                        this.$rotuer.store.state.module_admin\r\n                    </code>\r\n                </pre>\r\n                <p class=\"x-btn\" @click=\"user\">获取Store Module State : this.$store.state.module_user.user_name</p>\r\n            </div>\r\n        </div>\r\n\r\n        <div>\r\n            <p class=\"title-tip\">Module 全局命名空间</p>\r\n            <div class=\"x-font-container\">需要注意的是，一旦Store 中注册了Modules,其Action、Mutation、Getter 同样是全局的命名空间，这样使得多个模块能够对同一Mutation、Action 响应：\r\n                <hr/>\r\n                <div>this.$store.getters.getUserName;</div>\r\n                <div>this.$store.commit('commit_fun');</div>\r\n                <div>this.$store.dispatch('dispatch_fun');</div>\r\n\r\n                <p class=\"x-btn\" @click=\"getters\">this.$store.getters.getUserName</p>\r\n            </div>\r\n        </div>\r\n\r\n        <div>\r\n            <p class=\"title-tip\">模块的动态注册</p>\r\n            <div>&emsp;&emsp;在Store 注册之后，我们可以动态的往Store 添加其他状态管理的模块。-- store.registerModule 方法注册模块，实例:</div>\r\n            <pre>\r\n                <code>\r\n                    //管理员--admin\r\n                    const module_admin = {\r\n                        state:{\r\n                            manage_name:'李四',\r\n                        },\r\n                        getters:{\r\n                            getManageName(state,getter) {\r\n                                return state.manage_name;\r\n                            }\r\n                        },\r\n                        mutations:{\r\n                        },\r\n                        actions:{\r\n                        },\r\n                    };\r\n                    <span class=\"x-color\">// 外部注册Module</span>\r\n                    store.registerModule('module_admin',module_admin);\r\n\r\n                    <span class=\"x-color\">// 卸载module</span>\r\n                    store.unregisterModule('module_admin');\r\n                </code>\r\n            </pre>\r\n        </div>\r\n    </main>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n      return{\r\n      }  \r\n    },\r\n    created() {\r\n        let self = this;\r\n        let user = self.$store.state.module_user.user_name;\r\n        console.log(user);\r\n    }, \r\n    methods:{\r\n        user() {\r\n            let self = this;\r\n            let user = self.$store.state.module_user.user_name;\r\n            alert(user);\r\n        },\r\n        getters() {\r\n            let name = this.$store.getters.getUserName;\r\n            alert(name);\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n    .x-color{\r\n        color: #67c23a;\r\n    }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/page/view-8/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('main',[_c('div',[_c('p',{staticClass:\"title-tip margin-t-0\"},[_vm._v(\"使用进阶--module\")]),_vm._v(\" \"),_c('div',{staticClass:\"x-font-container\"},[_vm._v(\"Module => 从词义上理解就是模块块，在前端开发，模块化的概念已经在熟悉不过。初始化Vuex ，定义一个Store对象，使用单一的状态树，当应用对象涉及到大量的状态管理，应用变得越来越复杂的时候，store 对象会变得越来越臃肿，不易阅读以及维护。\")]),_vm._v(\" \"),_c('div',{staticClass:\"x-font-container\"},[_vm._v(\"实际模块化开发的理念在09 年已经提出，比如require.js,ecmascript-5。相比之前多页面的开发，到目前模块化、组件化、插件化的开发得到了质量上的提升。又随着H5 技术的成熟，前端开发早已经不是后端开发人员完全可以能够把拿的Code。其难度性也越之变大，同时随着技术的成熟，代码变得也更加合理、清晰、规范和易用。\\n            \"),_c('strong',[_vm._v(\"如下示例将介绍Store 对象分割成模块的使用:\")]),_vm._v(\" \"),_vm._m(0),_vm._v(\" \"),_c('p',{staticClass:\"x-btn\",on:{\"click\":_vm.user}},[_vm._v(\"获取Store Module State : this.$store.state.module_user.user_name\")])])]),_vm._v(\" \"),_c('div',[_c('p',{staticClass:\"title-tip\"},[_vm._v(\"Module 全局命名空间\")]),_vm._v(\" \"),_c('div',{staticClass:\"x-font-container\"},[_vm._v(\"需要注意的是，一旦Store 中注册了Modules,其Action、Mutation、Getter 同样是全局的命名空间，这样使得多个模块能够对同一Mutation、Action 响应：\\n            \"),_c('hr'),_vm._v(\" \"),_c('div',[_vm._v(\"this.$store.getters.getUserName;\")]),_vm._v(\" \"),_c('div',[_vm._v(\"this.$store.commit('commit_fun');\")]),_vm._v(\" \"),_c('div',[_vm._v(\"this.$store.dispatch('dispatch_fun');\")]),_vm._v(\" \"),_c('p',{staticClass:\"x-btn\",on:{\"click\":_vm.getters}},[_vm._v(\"this.$store.getters.getUserName\")])])]),_vm._v(\" \"),_vm._m(1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('pre',[_vm._v(\"                \"),_c('code',[_vm._v(\"\\n                    \"),_c('span',{staticClass:\"x-color\"},[_vm._v(\"//用户--Store\")]),_vm._v(\"\\n                    const module_user = {\\n                        state:{\\n                            user_name:'张三',\\n                        },\\n                        getters:{\\n                            getUserName(state,getter) {\\n                                return state.user_name;\\n                            }\\n                        },\\n                        mutations:{\\n                        },\\n                        actions:{\\n                        },\\n                    };\\n                    \"),_c('span',{staticClass:\"x-color\"},[_vm._v(\"//管理员--admin\")]),_vm._v(\"\\n                    const module_admin = {\\n                        state:{\\n                            manage_name:'李四',\\n                        },\\n                        getters:{\\n                            getManageName(state,getter) {\\n                                return state.manage_name;\\n                            }\\n                        },\\n                        mutations:{\\n                        },\\n                        actions:{\\n                        },\\n                    };\\n\\n                    const store = new vuex.Store({\\n                        \"),_c('span',{staticClass:\"x-color\"},[_vm._v(\"//Store 引入\")]),_vm._v(\"\\n                        modules:{\\n                            module_user,\\n                            module_admin\\n                        },\\n                    });\\n\\n                \\n                    \"),_c('strong',[_vm._v(\" 获取Module Store 对象：\")]),_vm._v(\"\\n                    \"),_c('span',{staticClass:\"x-color\"},[_vm._v(\"-> module_user 对象\")]),_vm._v(\"\\n                    this.$rotuer.store.state.module_user\\n\\n                    \"),_c('span',{staticClass:\"x-color\"},[_vm._v(\"-> module_admin 对象\")]),_vm._v(\"\\n                    this.$rotuer.store.state.module_admin\\n                \")]),_vm._v(\"\\n            \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('p',{staticClass:\"title-tip\"},[_vm._v(\"模块的动态注册\")]),_vm._v(\" \"),_c('div',[_vm._v(\"  在Store 注册之后，我们可以动态的往Store 添加其他状态管理的模块。-- store.registerModule 方法注册模块，实例:\")]),_vm._v(\" \"),_c('pre',[_vm._v(\"            \"),_c('code',[_vm._v(\"\\n                //管理员--admin\\n                const module_admin = {\\n                    state:{\\n                        manage_name:'李四',\\n                    },\\n                    getters:{\\n                        getManageName(state,getter) {\\n                            return state.manage_name;\\n                        }\\n                    },\\n                    mutations:{\\n                    },\\n                    actions:{\\n                    },\\n                };\\n                \"),_c('span',{staticClass:\"x-color\"},[_vm._v(\"// 外部注册Module\")]),_vm._v(\"\\n                store.registerModule('module_admin',module_admin);\\n\\n                \"),_c('span',{staticClass:\"x-color\"},[_vm._v(\"// 卸载module\")]),_vm._v(\"\\n                store.unregisterModule('module_admin');\\n            \")]),_vm._v(\"\\n        \")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-734e87db\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/page/view-8/index.vue\n// module id = nika\n// module chunks = 0","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-734e87db\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-734e87db\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-734e87db\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/page/view-8/index.vue\n// module id = q+Ne\n// module chunks = 0"],"sourceRoot":""}